package com.lvoutcity.model;

import java.util.List;

import com.jfinal.plugin.activerecord.Db;
import com.jfinal.plugin.activerecord.Record;
import com.lvoutcity.core.util.LvoutcityUtils;
import com.lvoutcity.model.base.BaseFriend;

/**
 * Generated by JFinal.
 */
@SuppressWarnings("serial")
public class Friend extends BaseFriend<Friend> {
	public static final Friend dao = new Friend();
	public void setPhoneNumber(java.lang.String phoneNumber){
		set("phone_number",phoneNumber);
	}
	public String getPhoneNumber(){
		return get("phone_number");
	}
	public List<Record> findByUserId(String userId){
		return	Db.find("select DISTINCT friend.avatar,friend.friend_id,friend.friend_name,`user`.phone_number,`user`.idcard from t_friend as friend LEFT JOIN t_user as user on user.id =friend.friend_id where friend.is_delete ='1' and friend.user_id =?",userId);
	}
	
	public Friend findById(String userId,String frindId){//根据用户id和好友id查询
		return	Friend.dao.findFirst("select * from t_friend where user_id = '"+userId +"' and friend_id = '" + frindId+"'" );
		}
	
	public List<Friend> findFriend(String userId, String value) {
		if(LvoutcityUtils.isNull(value)){
			return Friend.dao.find("select friend.user_id,friend.friend_id,friend.note,friend.create_time,"
			+ "user.nick_name as friend_name,friend.is_delete,friend.id,member.avatar as avatar,user.user_no as user_no,"
			+ "user.phone_number as phone_number " 
			+ " from t_friend as friend " 
			+ " left join t_user as user on user.id= friend.friend_id "
			+ " left join t_user_member as member on member.user_id =user.id "
			+ " where friend.user_id = '"+userId+"'");
		}
		 return Friend.dao.find("select friend.user_id,friend.friend_id,friend.note,friend.create_time,"
                +" user.nick_name as friend_name,friend.is_delete,friend.id,member.avatar as avatar,user.user_no,"
				+ " user.phone_number as phone_number " 
			    + " from t_friend as friend " 
			    + " left join t_user as user on user.id= friend.friend_id "
			    + " left join t_user_member as member on member.user_id =user.id "
		 		+ " where friend.user_id= '"+userId +"' and friend.friend_name like '%"+ value +"%'" );
	}
	
	public List<Friend> findFriendByUv(String userId, String friendId) {
		if(LvoutcityUtils.isNull(friendId)){
			return Friend.dao.find("select friend.user_id,friend.friend_id,friend.note,friend.create_time,"
					+ "user.nick_name as friend_name,friend.is_delete,friend.id,member.avatar as avatar,user.user_no as user_no,"
					+ "user.phone_number as phone_number " 
					+ " from t_friend as friend " 
					+ " left join t_user as user on user.id= friend.friend_id "
					+ " left join t_user_member as member on member.user_id =user.id "
					+ " where friend.user_id = ?",userId);
		}
		
		return Friend.dao.find("select friend.user_id,friend.friend_id,friend.note,friend.create_time,"
				+ "user.nick_name as friend_name,friend.is_delete,friend.id,member.avatar as avatar,user.user_no as user_no,"
				+ "user.phone_number as phone_number " 
				+ " from t_friend as friend " 
				+ " left join t_user as user on user.id= friend.friend_id "
				+ " left join t_user_member as member on member.user_id =user.id "
				+ " where friend.user_id = '"+userId+"' friend.friend_id='"+friendId+"'");
		 //return Friend.dao.find("select * from t_friend where user_id= '"+userId +"' and friend_id like '%"+ friendId +"%'" );
	}
	
	public boolean saveFriend(String id,String userId,String applicantappId,String nickName,String nowTime,String note,String avatar){
		@SuppressWarnings("unused")
		boolean flag=Friend.dao.set("id", id)
	      .set("user_id", userId)
	      .set("friend_id",applicantappId)
	      .set("friend_name",nickName)
	      .set("note", note)
	      .set("create_time", nowTime)
	      .set("avatar", avatar==null?"":avatar).save();
		
		return true;
	}
	public void setUserNo(int userNo){
		set("user_no",userNo);
	}
	public int  getUserNo(){
		return get("user_no");
	}

}
